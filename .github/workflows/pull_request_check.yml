name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm@

      - name: Cache pnpm dependencies
        id: pnpm-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Write env file
        run: |
          echo "VITE_TOSHI_MOTO_XPUB=${{ secrets.VITE_TOSHI_MOTO_XPUB }}" >> apps/web-ui/.env
          echo "VITE_BITCOIN_NETWORK=mainnet" >> apps/web-ui/.env
          echo "VITE_REST_TIME_BETWEEN_REQUESTS=0" >> apps/web-ui/.env
          echo "VITE_MAX_CONCURRENT_REQUESTS=8" >> apps/web-ui/.env
          echo "CI=true" >> apps/web-ui/.env
          echo "VITE_IS_UMBREL=false" >> apps/web-ui/.env
          echo "VITE_API_URL=http://umbrel.local:8021" >> apps/web-ui/.env
          echo "VITE_PRICING_STREAM_DISABLED=1" >> apps/web-ui/.env

      - name: Lint
        run: npx nx affected --target=lint --base=origin/${{ github.event.pull_request.base.ref }} --head=$GITHUB_SHA

      - name: Tests
        run: npx nx affected --target=test --base=origin/${{ github.event.pull_request.base.ref }} --head=$GITHUB_SHA

      - name: Debug dir
        run: |
          cat apps/web-ui/.env

      - name: Install Playwright Browsers
        run: |
          npx playwright install
          npx playwright install-deps

      - name: Screenshots
        run: npx nx run web-ui:e2e
        continue-on-error: true
        id: screenshots

      - name: Check Playwright Result
        id: check_playwright
        run: |
          if [ "${{ steps.screenshots.outcome }}" == "failure" ]; then
            echo "playwright_failed=true" >> $GITHUB_ENV
          else
            echo "playwright_failed=false" >> $GITHUB_ENV
          fi

      # this needs to be done internal to plugin
      - name: Set comparison SHA
        run: |
          if [ "$EVENT_TYPE" = "merge" ]; then
            # For merge commits, use the first parent (the main branch state before merge)
            PARENTS=$(git rev-list --parents -n 1 ${{ env.COMMIT_SHA }})
            COMPARE_SHA=$(echo "$PARENTS" | cut -d' ' -f2)  # Get the second word (first parent)
          else
            # For regular commits, use the same as BASE
            COMPARE_SHA=${{ env.BASE }}
          fi
          echo "COMPARE_SHA=$COMPARE_SHA" >> $GITHUB_ENV

      - name: WebshotArchive Action
        uses: webshotarchive/github-action@v0.4.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          screenshotsFolder: dist/.playwright/screenshots
          projectId: ${{secrets.TIMECHAIN_PROJECT_ID}}
          clientId: ${{ secrets.TIMECHAIN_CLIENT_ID }}
          clientSecret: ${{ secrets.TIMECHAIN_CLIENT_SECRET }}

      - name: Fail Pipeline if Playwright Failed
        if: env.playwright_failed == 'true'
        run: |
          echo "Playwright tests failed"
          exit 1

      - name: Send bundle stats to RelativeCI
        uses: relative-ci/agent-action@v2
        with:
          webpackStatsFile: ./dist/apps/web-ui/webpack-stats.json
          key: ${{ secrets.RELATIVE_CI_KEY }}
          token: ${{ secrets.GITHUB_TOKEN }}
