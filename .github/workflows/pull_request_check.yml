name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      # - name: Cache pnpm dependencies
      #   id: pnpm-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.pnpm-store
      #       node_modules
      #     key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Write env file
        run: |
          echo "VITE_COINGECKO_API_URL=https://api.toshimoto.app/api/prices/range" >> apps/web-ui/.env
          echo "VITE_COINGECKO_PRICE_API_URL=https://api.toshimoto.app/api/prices/simple" >> apps/web-ui/.env
          echo "VITE_TOSHI_MOTO_XPUB=${{ secrets.VITE_TOSHI_MOTO_XPUB }}" >> apps/web-ui/.env
          echo "VITE_BITCOIN_NETWORK=mainnet" >> apps/web-ui/.env
          echo "VITE_REST_TIME_BETWEEN_REQUESTS=0" >> apps/web-ui/.env
          echo "VITE_MAX_CONCURRENT_REQUESTS=8" >> apps/web-ui/.env
          echo "CI=true" >> apps/web-ui/.env
          echo "VITE_PRICING_API_URL=https://api.toshimoto.app" >> apps/web-ui/.env
          echo "VITE_BITCOIN_NODE_URL=https://mempool.space" >> apps/web-ui/.env
          echo "VITE_IS_UMBREL=false" >> apps/web-ui/.env
          echo "VITE_API_URL=https://api.toshimoto.app" >> apps/web-ui/.env
          echo "VITE_PRICING_STREAM_DISABLED=1" >> apps/web-ui/.env

      - name: Lint
        run: npx nx affected --target=lint --base=origin/${{ github.event.pull_request.base.ref }} --head=$GITHUB_SHA

      - name: Tests
        run: npx nx affected --target=test --base=origin/${{ github.event.pull_request.base.ref }} --head=$GITHUB_SHA

      - name: Debug dir
        run: |
          cat apps/web-ui/.env

      - name: Cypress Run
        id: cypress_run
        continue-on-error: true
        run: |
          npx nx e2e web-ui-e2e --configuration=production

      - name: Check Cypress Result
        id: check_cypress
        run: |
          if [ "${{ steps.cypress_run.outcome }}" == "failure" ]; then
            echo "cypress_failed=true" >> $GITHUB_ENV
          else
            echo "cypress_failed=false" >> $GITHUB_ENV
          fi

      # this needs to be done internal to plugin
      - name: Set comparison SHA
        run: |
          if [ "$EVENT_TYPE" = "merge" ]; then
            # For merge commits, use the first parent (the main branch state before merge)
            PARENTS=$(git rev-list --parents -n 1 ${{ env.COMMIT_SHA }})
            COMPARE_SHA=$(echo "$PARENTS" | cut -d' ' -f2)  # Get the second word (first parent)
          else
            # For regular commits, use the same as BASE
            COMPARE_SHA=${{ env.BASE }}
          fi
          echo "COMPARE_SHA=$COMPARE_SHA" >> $GITHUB_ENV

      - name: WebshotArchive Action
        uses: toshimoto821/webshotarchive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          milliseconds: 1000
          screenshotsFolder: dist/cypress
          commitSha: ${{ github.event.pull_request.head.sha }}
          compareCommitSha: ${{ github.event.pull_request.base.sha }} #the sha the pr is going into
          compareBranch: ${{ github.event.pull_request.base.ref }}
          branchName: ${{ github.event.pull_request.head.ref }}
          mergedBranch: ${{ github.event.pull_request.base.ref }}
          type: "push"
          comment: true
          tags: pr
          projectId: ${{secrets.TIMECHAIN_PROJECT_ID}}
          clientId: ${{ secrets.TIMECHAIN_CLIENT_ID }}
          clientSecret: ${{ secrets.TIMECHAIN_CLIENT_SECRET }}

      - name: Fail Pipeline if Cypress Failed
        if: env.cypress_failed == 'true'
        run: |
          echo "Cypress tests failed"
          exit 1

      - name: Send bundle stats to RelativeCI
        uses: relative-ci/agent-action@v2
        with:
          webpackStatsFile: ./dist/apps/web-ui/webpack-stats.json
          key: ${{ secrets.RELATIVE_CI_KEY }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Cypress Screenshots
      #   if: failure() # This ensures screenshots are uploaded only if the previous step fails
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: cypress-screenshots
      #     path: dist/cypress/apps/web-ui-e2e/screenshots/**/*
      #if-no-files-found: ignore # This option will prevent the step from failing if no screenshots are found

      # this may not be needed. the build is run when docker is built
      # - name: Build
      #   run: |
      #     npx nx affected --target=build --base=origin/${{ github.event.pull_request.base.ref }} --head=$GITHUB_SHA
      #
