name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    environment: umbrel
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # this may not be needed. the build is run when docker is built
      - name: Build
        run: |
          npx nx run-many --target=build --all --exclude=web-ui
          npx nx run web-ui:build:umbrel

      - name: Bump version
        run: |
          ./scripts/bump_version.sh "$LABELS" apps/web-ui false
          ./scripts/bump_version.sh "$LABELS" apps/api false
          ./scripts/bump_version.sh "$LABELS" ./ false
          echo "VERSION=$(cat package.json | jq -r .version)" >> $GITHUB_ENV

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Release $VERSION"
          git tag v$VERSION

      - name: GitHub Push
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          tags: true

      - name: Setup Docker
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        uses: crazy-max/ghaction-setup-docker@v2
        with:
          version: v24.0.6
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Run Docker build
        run: |
          export VERSION=v${VERSION}
          export VITE_TOSHI_MOTO_XPUB=${{secrets.VITE_TOSHI_MOTO_XPUB}}
          export VITE_COINGECKO_PRICE_API_URL=/api/prices/simple
          export VITE_COINGECKO_API_URL=/api/prices/range
          export VITE_BITCOIN_NODE_URL=http://umbrel.local:3006
          export VITE_REST_TIME_BETWEEN_REQUESTS=0
          export VITE_MAX_CONCURRENT_REQUESTS=8
          export VITE_BITCOIN_NETWORK=mainnet
          npx nx run-many --target=docker --projects=web-ui,api
